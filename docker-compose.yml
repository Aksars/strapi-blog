services:
  postgres:
    image: postgres:16
    container_name: strapi_postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    env_file:
      - .env.db    
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - strapi-network

  
  strapi:   
    build: ./strapi  
    container_name: strapi_app
    volumes:
      - ./strapi:/app       # Монтирует код
      - strapi_node_modules:/app/node_modules  # Защищает node_modules
    ports:
      - "1337:1337"
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env.strapi
      - .env.db    
    healthcheck:
      test: curl -f http://localhost:1337/admin/ || exit 1
      interval: 30s
      start_period: 20s
      timeout: 20s
      retries: 3
    networks:
     - strapi-network
      

  nextjs:
    build:
      context: ./nextjs
      dockerfile: Dockerfile
    container_name: strapi_nextjs
    ports:
      - "3000:3000"
    depends_on:
     strapi:
      condition: service_healthy
    volumes:
      - ./nextjs:/app
      - nextjs_node_modules:/app/node_modules
    env_file:
      - .env.nextjs  
    # command: tail -f /dev/null  
    # command: npm run dev
    networks:
      - strapi-network
  
  bridge:
    build: ./bridge
    container_name: bridge
    volumes:
      - ./bridge:/app
      - bridge_node_modules:/app/node_modules
    depends_on:
      - postgres
      - redis 
    env_file:
      - .env.bot+ai
      - .env.db
    networks:
      - strapi-network
    environment:
      - REDIS_URL=redis://redis:6379
  
  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --save 60 1 --loglevel warning
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - strapi-network

volumes:
  postgres_data:
  strapi_node_modules:
  nextjs_node_modules:
  bridge_node_modules:
  redis_data:

networks:
  strapi-network:
    driver: bridge