import 'dotenv/config';
import { Bot } from 'grammy';
import OpenAI from "openai";

// --- –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞ ---
const token = process.env.BOT_TOKEN;
if (!token) {
  console.error("‚ùå BOT_TOKEN –Ω–µ –∑–∞–¥–∞–Ω –≤ .env");
  process.exit(1);
}

const apiToken = process.env.OPENAI_API_KEY;
if (!apiToken) {
  console.error("‚ùå OPENAI_API_KEY –Ω–µ –∑–∞–¥–∞–Ω –≤ .env");
  process.exit(1);
}

// --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è OpenAI ---
const client = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY, // –∫–ª—é—á –∏–∑ .env
});

// --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ ---
const bot = new Bot(token);

// --- –û–±—Ä–∞–±–æ—Ç–∫–∞ –ª—é–±–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ ---
bot.on('message:text', async (ctx) => {
  try {
    // —Ç–µ–∫—Å—Ç –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const userMessage = ctx.message.text;

    // –∑–∞–ø—Ä–æ—Å –≤ GPT
    const response = await client.responses.create({
      model: "gpt-5-mini", // –º–æ–∂–Ω–æ gpt-4.1-mini –¥–ª—è —Å–∫–æ—Ä–æ—Å—Ç–∏ –∏ —Ü–µ–Ω—ã
      input: userMessage,
    });

    // –æ—Ç–≤–µ—Ç –æ—Ç GPT
    const replyText = response.output_text || "ü§ñ –Ø –Ω–µ —Å–º–æ–≥ –ø—Ä–∏–¥—É–º–∞—Ç—å –æ—Ç–≤–µ—Ç";

    await ctx.reply(replyText);
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ OpenAI:", error);
    await ctx.reply("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ—Ç–≤–µ—Ç–∞ –æ—Ç GPT");
  }
});

// --- –°—Ç–∞—Ä—Ç –±–æ—Ç–∞ ---
bot.start();
console.log("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Å–ª—É—à–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è!");
