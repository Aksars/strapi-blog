import { getTokens, initRedisStorage, createBot, initOpenAI } from './init/index.js';
import { logger } from './utils/logger.js'
import { ImageGenerationService, ImageDeliveryService, TextGenerationService, StrapiService } from "./service/index.js";
import {
  setupCallbackHandlers, setupCommandHandlers,
  setupMessageHandlers, setupMiddlewareHandlers
} from './handlers/index.js';

async function main() {
  try {
    const { token, apiToken } = getTokens();

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    const openAIClient = initOpenAI(apiToken);
    const storage = await initRedisStorage();
    const bot = createBot(storage, token);

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å—ã
    const strapiService = new StrapiService();
    const imageGenerationService = new ImageGenerationService(openAIClient);
    const imageDeliveryService = new ImageDeliveryService(strapiService);
    const textGenerationService = new TextGenerationService(openAIClient)
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    setupCallbackHandlers(bot, imageDeliveryService, imageGenerationService, textGenerationService, strapiService);
    setupCommandHandlers(bot, imageDeliveryService, imageGenerationService);
    setupMessageHandlers(bot, imageDeliveryService, imageGenerationService, textGenerationService, strapiService);
    setupMiddlewareHandlers(bot);

    // –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞asdasd
    bot.start();
    logger.info(" ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Å–ª—É—à–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è!");

  } catch (error) {
    logger.error("‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞:", error);
    process.exit(1);
  }
}

main();