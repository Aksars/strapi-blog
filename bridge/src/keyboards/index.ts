
import { saveMenu, } from './saveMenu.js';
import { imageModelMenu } from './imageModelMenu.js';
import { textModelMenu, } from './textModelMenu.js';
import { strapiMenu, } from './strapiMenu.js';
import { mainMenu, showMainMenu } from './mainMenu.js';
export { strapiMenu, showMainMenu, saveMenu, imageModelMenu, textModelMenu, }


import { InlineKeyboard } from 'grammy';
import { MyContext } from '../types/session.js';
import { ImageModel, TextModel } from '../types/models.js';




// –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
export async function switchMainMenu(ctx: MyContext) {


  await ctx.editMessageText(
    "üìã –ú–µ–Ω—é:",
    {
      reply_markup: mainMenu,
      parse_mode: 'Markdown'
    }
  );
}

// –ú–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–π –º–æ–¥–µ–ª–∏
export async function showTextModelMenu(ctx: MyContext) {
  const keyboard = new InlineKeyboard()
    .text('GPT-3.5 Turbo', 'text_model_gpt35')
    .text('GPT-4', 'text_model_gpt4')
    .text('GPT-4 Turbo', 'text_model_gpt4turbo')
    .row()
    .text('‚Ü©Ô∏è –ù–∞–∑–∞–¥', 'menu');

  await ctx.editMessageText(
    'üß† **–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤—É—é –º–æ–¥–µ–ª—å:**\n\n' +
    '‚Ä¢ *GPT-3.5 Turbo* - –±—ã—Å—Ç—Ä–∞—è –∏ —ç–∫–æ–Ω–æ–º–∏—á–Ω–∞—è\n' +
    '‚Ä¢ *GPT-4* - –±–æ–ª–µ–µ —É–º–Ω–∞—è –∏ —Ç–æ—á–Ω–∞—è\n' +
    '‚Ä¢ *GPT-4 Turbo* - –æ–ø—Ç–∏–º–∞–ª—å–Ω–∞—è –ø–æ —Å–∫–æ—Ä–æ—Å—Ç–∏ –∏ –∫–∞—á–µ—Å—Ç–≤—É',
    {
      reply_markup: keyboard,
      parse_mode: 'Markdown'
    }
  );
}

// –ú–µ–Ω—é –≤—ã–±–æ—Ä–∞ –º–æ–¥–µ–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
export async function showImageModelMenu(ctx: MyContext) {
  const keyboard = new InlineKeyboard()
    .text('GPT Image', 'image_model_gpt')
    .text('DALL-E', 'image_model_dalle')
    .row()
    .text('‚Ü©Ô∏è –ù–∞–∑–∞–¥', 'menu');

  await ctx.editMessageText(
    'üé® **–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:**\n\n' +
    '‚Ä¢ *GPT Image-1* - –æ–±—ã—á–Ω–∞—è —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –º–æ–¥–µ–ª—å\n' +
    '‚Ä¢ *DALL-E-2* - –∏–Ω–æ–≥–¥–∞ –≤—ã–¥–∞–µ—Ç –±–æ–ª–µ–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç, —Ö–æ—Ç—è —Å—Ç–∞—Ä–∞—è',
    {
      reply_markup: keyboard,
      parse_mode: 'Markdown'
    }
  );
}

// –î–µ–π—Å—Ç–≤–∏—è –ø–æ—Å–ª–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞
export async function showTextActions(ctx: MyContext) {
  const keyboard = new InlineKeyboard()
    .text('üîÑ –†–µ–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å', 'regenerate_text')
    .text('üìù –ù–æ–≤—ã–π —Ç–µ–∫—Å—Ç', 'new_text')
    .row()
    .text('üìã –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'menu');

  await ctx.reply(
    '‚úÖ **–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!**\n\n' +
    '–ß—Ç–æ –¥–∞–ª—å—à–µ?\n' +
    '‚Ä¢ üîÑ –†–µ–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç\n' +
    '‚Ä¢ üìù –ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å\n' +
    '‚Ä¢ üìã –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',
    {
      reply_markup: keyboard,
      parse_mode: 'Markdown'
    }
  );
}

// –î–µ–π—Å—Ç–≤–∏—è –ø–æ—Å–ª–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
export async function showImageActions(ctx: MyContext) {
  const keyboard = new InlineKeyboard()
    .text('üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä', 'save_yes')
    .text('‚ùå –ù–µ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å', 'save_no');

  await ctx.reply(
    'üé® **–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ!**\n\n' +
    '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä?',
    {
      reply_markup: keyboard,
      parse_mode: 'Markdown'
    }
  );
}

// –ú–µ–Ω—é —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ Strapi (–æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
export async function showStrapiMenu(ctx: MyContext) {
  const keyboard = new InlineKeyboard()
    .text('‚úÖ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ Strapi', 'strapi_yes')
    .text('‚ùå –ù–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å', 'strapi_no');

  await ctx.editMessageText(
    'üöÄ **–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ Strapi?**',
    { reply_markup: keyboard }
  );
}

// –ú–µ–Ω—é —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä (–æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
export async function showSaveMenu(ctx: MyContext) {
  const keyboard = new InlineKeyboard()
    .text('üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä', 'save_yes')
    .text('‚ùå –ù–µ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å', 'save_no');

  await ctx.editMessageText(
    'üíæ **–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä?**',
    { reply_markup: keyboard }
  );
}

export async function madnessMenu(ctx: MyContext) {
  const keyboard = new InlineKeyboard()
    .text('‚Ü©Ô∏è –ù–∞–∑–∞–¥', 'menu');
  await ctx.editMessageText(
    '–í–≤–µ–¥–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –±–µ–∑—É–º–∏—è –æ—Ç 1 –¥–æ 10',
    { reply_markup: keyboard }
  );
}